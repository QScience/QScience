<?php

//ini_set('xdebug.max_nesting_level', 600);

$author_node_ids = array();
$paper_node_ids = array();

/**
 * Implements node_create_for_REFERENCE_TYPE hook to able to create lazy referencing.
 */
function qscience_node_create_for_author_reference($node_title, $language) {
  global $user;
  
  $node = new stdClass();
  $node->title = $node_title;
  $split = explode(" ", $node->title);
  $first_name = isset($split[0]) ? $split[0] : 'unknown';
  $last_name = isset($split[1]) ? implode(" ", array_splice($split, 1)) : '';

  $node->first_name = array(
    $language => array(
      array(
        'value' => $first_name
      )
    )
  );
  $node->last_name = array(
    $language => array(
      array(
        'value' => $last_name
      )
    )
  );
  $node->type = "author";
  node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
  $node->language = $language; // Or e.g. 'en' if locale is enabled
  $node->uid = $user->uid;
  $node->status = 1; //(1 or 0): published or not
  $node->promote = 0; //(1 or 0): promoted to front page
  $node->comment = 1; //2 = comments on, 1 = comments off

  $node = node_submit($node); // Prepare node for saving
  node_save($node);
  
  return $node->nid;
}

/**
 * Implements file_insert
 */
function qscience_file_insert($file) {
  if ($_POST['form_id'] == 'paper_node_form') {
    qscience_paper_uploaded($file);
  }
}

function qscience_paper_uploaded($file) {
  foreach (module_implements('paper_uploaded') as $module) {
    if ($module === 'qscience') continue;
    module_invoke($module, 'paper_uploaded', $file);
  }
}

function qscience_form_paper_node_form_alter(&$form, &$form_state, $form_id) {
  dvm('form alter');
  drupal_add_css(drupal_get_path('module', 'qscience') . '/css/qscience.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
}

function qscience_node_insert_deprecated($node) {
  global $author_node_ids, $paper_node_ids, $user;


  if (isset($node->form_id) && $node->form_id === 'paper_node_form') {
    foreach ($author_node_ids as $aid => $name) {
      $relation = new stdClass();
      $relation->is_new = TRUE;
      $relation->relation_type = 'belongs_to';
      $relation->uid = $user->uid;
      $relation->endpoints = array(
        'und' => array(
          array(
            'entity_type' => 'node',
            'entity_id' => $aid,
            'entity_bundle' => 'author',
            'r_index' => 0,
            'entity_label' => 'author: ' . $name,
            'entity_key' => 'node:' . $aid,
          ),
          array(
            'entity_type' => 'node',
            'entity_id' => $node->nid,
            'entity_bundle' => 'paper',
            'r_index' => 1,
            'entity_label' => 'paper: ' . $node->title,
            'entity_key' => 'node:' . $node->nid,
          ),
        ),
      );
      relation_save($relation);
    }
    foreach ($paper_node_ids as $pid => $title) {
      $relation = new stdClass();
      $relation->is_new = TRUE;
      $relation->relation_type = 'references_to';
      $relation->uid = $user->uid;
      $relation->endpoints = array(
        'und' => array(
          array(
            'entity_type' => 'node',
            'entity_id' => $pid,
            'entity_bundle' => 'paper',
            'r_index' => 0,
            'entity_label' => 'paper: ' . $title,
            'entity_key' => 'node:' . $pid,
          ),
          array(
            'entity_type' => 'node',
            'entity_id' => $node->nid,
            'entity_bundle' => 'paper',
            'r_index' => 1,
            'entity_label' => 'paper: ' . $node->title,
            'entity_key' => 'node:' . $node->nid,
          ),
        ),
      );
      relation_save($relation);
    }
  }
}

function qscience_add_author_node_by_hand_deprecated($form, &$form_state) {
  global $user, $author_node_ids, $paper_node_ids;

  $i = 1;
  while (isset($_POST['author_'.$i])) {
    $name = trim($_POST['author_'.$i]);
    if (strlen($name) == 0) {
      $i++;
      continue;
    }
    $name = explode(" ", $name);
    $fname = isset($name[0]) ? $name[0] : 'unknown';
    $lname = isset($name[1]) ? $name[1] : 'unknown';

    $node = new stdClass();
    $node->type = 'author';
    $node->title = $fname . ' ' .$lname;
    $node->uid = $user->uid;
    //$path = 'content/pcn_' . date('YmdHis');
    //$node->path = array('alias' => $path);
    node_object_prepare($node);
       
    $node->language = LANGUAGE_NONE;
    $node->first_name[$node->language][0]['value'] = $fname;
    $node->last_name[$node->language][0]['value'] = $lname;
    
    $node = node_submit($node);
    node_save($node);
    $author_node_ids[$node->nid] = $name;
    $i++;
  }
  $i = 1;
  while (isset($_POST['citation_'.$i])) {
    $title = trim($_POST['citation_'.$i]);
    if (strlen($title) == 0) {
      $i++;
      continue;
    }
    $node = new stdClass();
    $node->type = 'paper';
    $node->title = $title;
    $node->uid = $user->uid;
    node_object_prepare($node);
       
    $node->language = LANGUAGE_NONE;
    $node->abstract = '';
    $node->journal = '';
    
    $node = node_submit($node);
    node_save($node);
    $paper_node_ids[$node->nid] = $title;
    $i++;
  }
}

function qscience_views_api() {
  return array(
    'api' => '3.0'
  );
}


